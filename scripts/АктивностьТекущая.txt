WITH db_stats AS (
    SELECT
        datname,
        xact_commit,
        ROUND((tup_returned::numeric / NULLIF(xact_commit, 0)) * 100, 1) AS ret,
        ROUND((tup_inserted::numeric / NULLIF(xact_commit, 0)) * 100, 1) AS ins,
        ROUND((tup_updated::numeric / NULLIF(xact_commit, 0)) * 100, 1) AS upd,
        ROUND((tup_deleted::numeric / NULLIF(xact_commit, 0)) * 100, 1) AS del,
        NTILE(4) OVER (ORDER BY xact_commit DESC) AS activity_group
    FROM
        pg_stat_database
    WHERE
        datid > 14350  AND stats_reset BETWEEN '2025-04-01'::timestamptz AND now()
)
SELECT
    datname,
    xact_commit,
    ret,
    ins,
    upd,
    del,
    CASE
        WHEN activity_group = 1 THEN 'High'
        WHEN activity_group = 2 THEN 'Medium'
        WHEN activity_group = 3 THEN 'Low'
        WHEN activity_group = 4 THEN 'Very Low'
    END AS activity_level
FROM
    db_stats
ORDER BY
    xact_commit DESC, ret;


WITH db_stats AS (
    SELECT
        datname,
        xact_commit,
        tup_returned,
        tup_inserted,
        tup_updated,
        tup_deleted,
        -- Общее количество операций (SELECT + INSERT + UPDATE + DELETE)
        (tup_returned + tup_inserted + tup_updated + tup_deleted)::numeric AS total_ops,
        NTILE(3) OVER (ORDER BY xact_commit DESC) AS activity_group
    FROM
        pg_stat_database
    WHERE
        datid > 14350
        --AND stats_reset --BETWEEN '2025-05-01'::timestamptz AND now()
)
SELECT
    datname,
    xact_commit,
    -- Процент SELECT от общего числа операций
    ROUND((tup_returned::numeric / NULLIF(total_ops, 0)) * 100, 3) AS select_percent,
    -- Процент INSERT от общего числа операций
    ROUND((tup_inserted::numeric / NULLIF(total_ops, 0)) * 100, 3) AS insert_percent,
    -- Процент UPDATE от общего числа операций
    ROUND((tup_updated::numeric / NULLIF(total_ops, 0)) * 100, 3) AS update_percent,
    -- Процент DELETE от общего числа операций
    ROUND((tup_deleted::numeric / NULLIF(total_ops, 0)) * 100, 3) AS delete_percent,
    CASE
        WHEN activity_group = 1 THEN 'High'
        WHEN activity_group = 2 THEN 'Medium'
        WHEN activity_group = 3 THEN 'Low'
    END AS activity_level
FROM
    db_stats
ORDER BY
    xact_commit DESC;